defaults:
  - dataset_base
  - _self_

connection_uri: "postgres://${oc.env:USER}:@localhost:5432/mimiciv"
save_dir: "${oc.env:PROJECT_DATA_DIR}/${cohort_name}"
subject_id_col: "stay_id"
min_los: 1
min_admissions: 1
min_age: 18
observation_hrs: 12
max_icd_seq_num: null
inputs:
  patients:
    query: |-
      SELECT DISTINCT ON (icustays.hadm_id)
        icustays.subject_id,
        icustays.hadm_id,
        icustays.stay_id,
        patients.gender,
        to_date((patients.anchor_year-patients.anchor_age)::CHAR(4), 'YYYY') AS year_of_birth
      FROM (
        mimiciv_icu.icustays AS icustays INNER JOIN mimiciv_hosp.patients AS patients
        ON icustays.subject_id = patients.subject_id
      )
      WHERE
        icustays.los >= ${min_los} 
        AND (extract(year from icustays.intime) - patients.anchor_year + patients.anchor_age) >= ${min_age}
        AND icustays.first_careunit = last_careunit
      ORDER BY icustays.hadm_id, icustays.intime
    must_have: ["year_of_birth"]
  death:
    # query: "SELECT subject_id, deathtime FROM mimiciv_hosp.admissions WHERE deathtime IS NOT NULL"
    query: |-
      SELECT DISTINCT ON (icustays.hadm_id)
        icustays.subject_id,
        icustays.hadm_id,
        icustays.stay_id,
        admissions.deathtime
      FROM (
        mimiciv_icu.icustays as icustays INNER JOIN mimiciv_hosp.admissions AS admissions
        ON icustays.hadm_id = admissions.hadm_id
      )
      WHERE admissions.deathtime IS NOT NULL
      ORDER BY icustays.hadm_id, icustays.intime
    ts_col: "deathtime"
  admissions:
    # query: "SELECT * FROM mimiciv_hosp.admissions"
    query: |-
      SELECT DISTINCT ON (icustays.hadm_id)
        icustays.subject_id,
        icustays.hadm_id,
        icustays.stay_id,
        admissions.admittime,
        admissions.dischtime
      FROM (
        mimiciv_icu.icustays as icustays INNER JOIN mimiciv_hosp.admissions AS admissions
        ON icustays.hadm_id = admissions.hadm_id
      )
      ORDER BY icustays.hadm_id, icustays.intime
    start_ts_col: "admittime"
    end_ts_col: "dischtime"
    event_type: ["VISIT", "ADMISSION", "DISCHARGE"]
  icu_stays:
    query: "SELECT * FROM mimiciv_icu.icustays"
    start_ts_col: "intime"
    end_ts_col: "outtime"
  labs:
    query:
      - |-
        SELECT
          icustays.stay_id,
          labevents.charttime,
          CASE
            WHEN labevents.label IS NULL THEN 'NONE'
            ELSE labevents.label
          END AS lab,
          labevents.value AS text_value,
          labevents.valuenum,
          labevents.valueuom,
          labevents.ref_range_lower,
          labevents.ref_range_upper,
          labevents.flag,
          labevents.priority,
          labevents.comments
        FROM (
          mimiciv_icu.icustays AS icustays INNER JOIN (
            mimiciv_hosp.labevents INNER JOIN (
              SELECT itemid, label FROM mimiciv_hosp.d_labitems
            ) AS d_items
            ON d_items.itemid = mimiciv_hosp.labevents.itemid
          ) AS labevents
          ON (
            labevents.hadm_id = icustays.hadm_id
            AND icustays.intime <= labevents.charttime
            AND labevents.charttime <= icustays.outtime
            AND labevents.charttime <= icustays.intime + '${observation_hrs} hours'::interval
            )
        )
    ts_col: "charttime"
  infusions:
    query: |-
      SELECT
        icustays.stay_id,
        CASE
          WHEN inputevents_ditems.label IS NULL THEN 'NONE'
          ELSE inputevents_ditems.label
        END AS infusion,
        inputevents_ditems.amount,
        inputevents_ditems.amountuom,
        inputevents_ditems.rate,
        inputevents_ditems.rateuom,
        inputevents_ditems.ordercategoryname,
        inputevents_ditems.secondaryordercategoryname,
        inputevents_ditems.ordercomponenttypedescription,
        inputevents_ditems.ordercategorydescription,
        inputevents_ditems.patientweight,
        inputevents_ditems.totalamount,
        inputevents_ditems.totalamountuom,
        inputevents_ditems.isopenbag,
        inputevents_ditems.originalamount,
        inputevents_ditems.originalrate,
        inputevents_ditems.starttime,
        inputevents_ditems.endtime
      FROM (
        mimiciv_icu.icustays AS icustays
        INNER JOIN (
          mimiciv_icu.inputevents AS inputevents INNER JOIN mimiciv_icu.d_items AS d_items
          ON inputevents.itemid = d_items.itemid
        ) AS inputevents_ditems
        ON (
            inputevents_ditems.stay_id = icustays.stay_id
            AND icustays.intime <= inputevents_ditems.starttime
            AND inputevents_ditems.starttime <= icustays.intime + '${observation_hrs} hours'::interval
          )
      )
    start_ts_col: "starttime"
    end_ts_col: "endtime"
  medications:
    query: |-
      SELECT
        icustays.stay_id,
        prescriptions.starttime,
        prescriptions.drug_type,
        CASE
          WHEN prescriptions.drug IS NULL THEN 'NONE'
          ELSE prescriptions.drug
        END AS medication,
        prescriptions.prod_strength,
        prescriptions.form_rx,
        prescriptions.dose_val_rx,
        prescriptions.dose_unit_rx,
        prescriptions.form_val_disp,
        prescriptions.form_unit_disp,
        prescriptions.doses_per_24_hrs,
        prescriptions.route
      FROM (
        mimiciv_icu.icustays AS icustays INNER JOIN mimiciv_hosp.prescriptions AS prescriptions
        ON (
          prescriptions.hadm_id = icustays.hadm_id
          AND icustays.intime <= prescriptions.starttime
          AND prescriptions.starttime <= icustays.outtime
          AND prescriptions.starttime <= icustays.intime + '${observation_hrs} hours'::interval
        )
      )
    ts_col: "starttime"

measurements:
  static:
    single_label_classification:
      patients: ["gender"]
  dynamic:
    multi_label_classification:
      medications: 
        - name: "medication"
          modifiers:
            - ["drug_type", "categorical"]
            - ["prod_strength", "categorical"]
            - ["form_rx", "categorical"]
            - ["dose_val_rx", "categorical"]
            - ["dose_unit_rx", "categorical"]
            - ["form_val_disp", "categorical"]
            - ["form_unit_disp", "categorical"]
            - ["doses_per_24_hrs", "categorical"]
            - ["route", "categorical"]
    multivariate_regression:
      labs: 
        - name: "lab"
          values_column: "valuenum"
          modifiers:
            - ["valueuom", "categorical"]
            - ["ref_range_lower", "float"]
            - ["ref_range_upper", "float"]
            - ["flag", "categorical"]
            - ["priority", "categorical"]
            - ["comments", "categorical"]
      infusions: 
        - name: "infusion"
          values_column: "amount"
          modifiers:
            - ["amountuom", "categorical"]
            - ["rate", "float"]
            - ["rateuom", "categorical"]
            - ["ordercategoryname", "categorical"]
            - ["secondaryordercategoryname", "categorical"]
            - ["ordercomponenttypedescription", "categorical"]
            - ["ordercategorydescription", "categorical"]
            - ["patientweight", "float"]
            - ["totalamount", "float"]
            - ["totalamountuom", "categorical"]
            - ["isopenbag", "boolean"]
            - ["originalamount", "float"]
            - ["originalrate", "float"]

outlier_detector_config: null
normalizer_config: null
min_valid_vocab_element_observations: null
min_valid_column_observations: null
min_true_float_frequency: null
min_unique_numerical_observations: null
min_events_per_subject: null
agg_by_time_scale: null
DL_chunk_size: 4000
